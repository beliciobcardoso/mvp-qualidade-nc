// generator dbml {
//   provider = "prisma-dbml-generator"
// }

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PhotoAnalisys {
  id          Int    @id @default(autoincrement())
  idReport    Int
  report      Report @relation(fields: [idReport], references: [id])
  url         String
  name        String
  description String
}

model DescriptionAnalisys {
  id       Int    @id @default(autoincrement())
  idReport Int
  report   Report @relation(fields: [idReport], references: [id])
  service  String
  status   String
}

model Report {
  id           Int        @id @default(autoincrement())
  sites        Site       @relation(fields: [siteId], references: [id])
  siteId       Int
  dateService  DateTime
  createdAt    DateTime   @default(now())
  updatedAt    DateTime?
  finishedAt   DateTime?
  technician   Technician @relation(fields: [technicianId], references: [id])
  technicianId String
  user         User       @relation(fields: [userId], references: [id])
  userId       String
  analyst      User?      @relation("ANALYST", fields: [analystId], references: [id])
  analystId    String?

  photoAnalisys       PhotoAnalisys[]
  descriptionAnalisys DescriptionAnalisys[]
}

model Site {
  id              Int           @id @default(autoincrement())
  idSite          String        @unique
  altura          String?
  endereco        String
  bairro          String
  numero          String
  cidade          String
  uf              String
  structureType   StructureType @relation(fields: [structureTypeId], references: [id])
  structureTypeId Int
  client          Client        @relation(fields: [idClient], references: [id])
  idClient        String
  siteType        SiteType      @relation(fields: [siteTypeId], references: [id])
  siteTypeId      Int
  Report          Report[]
}

model Client {
  id   String  @id @default(cuid())
  name String
  img  String?
  site Site[]
}

model SiteType {
  id    Int    @id @default(autoincrement())
  name  String
  sites Site[]
}

model StructureType {
  id    Int    @id @default(autoincrement())
  name  String
  sites Site[]
}

model Technician {
  id      String   @id @default(cuid())
  name    String
  reports Report[]
}

model User {
  id           String   @id @default(cuid())
  name         String
  email        String   @unique
  avatar       String?
  role         Role
  passwordHash String
  createdAt    DateTime @default(now())

  analyst Report[] @relation("ANALYST")
  Report  Report[]
}

enum Role {
  ADMIN
  USER
  ANALYST
  TECHNICIAN
  COORDINATOR
}
